# Generated by Django 4.1 on 2022-08-24 19:40

import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Labeled',
            fields=[
                ('id', models.IntegerField(db_index=True, help_text='labeling id', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(db_index=True, help_text='date of observations')),
                ('night', models.IntegerField(db_index=True, default=0, help_text='night of observation (YYYYMMDD, UT)')),
                ('filearchivepath', models.TextField(default='', help_text='thumbnail filename and archive path')),
                ('moonalt', models.FloatField(db_index=True, default=-99, help_text='altitude of the Moon')),
                ('sunalt', models.FloatField(db_index=True, default=-99, help_text='altitude of the Sun')),
                ('moonphase', models.FloatField(db_index=True, default=-1, help_text='illumination of the Moon')),
                ('srcdens', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='source density per subregion'), null=True, size=None)),
                ('bkgmean', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background mean value per subregion'), null=True, size=None)),
                ('bkgmedian', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background median value per subregion'), null=True, size=None)),
                ('bkgstd', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background standard deviation per subregion'), null=True, size=None)),
                ('srcdens_3min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='source density per subregion'), null=True, size=None)),
                ('bkgmean_3min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background mean value per subregion'), null=True, size=None)),
                ('bkgmedian_3min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background median value per subregion'), null=True, size=None)),
                ('bkgstd_3min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background standard deviation per subregion'), null=True, size=None)),
                ('srcdens_15min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='source density per subregion'), null=True, size=None)),
                ('bkgmean_15min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background mean value per subregion'), null=True, size=None)),
                ('bkgmedian_15min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background median value per subregion'), null=True, size=None)),
                ('bkgstd_15min', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background standard deviation per subregion'), null=True, size=None)),
                ('cloudy', django.contrib.postgres.fields.ArrayField(base_field=models.BooleanField(default=False, help_text='indicates presence of clouds per subregion'), null=True, size=None)),
                ('labeled_by', models.GenericIPAddressField(help_text='IP address of labeler', null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='time of ingestion')),
            ],
            options={
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='Subregion',
            fields=[
                ('id', models.IntegerField(db_index=True, help_text='subregion index', primary_key=True, serialize=False)),
                ('polygon_xy', models.TextField(help_text='polygon nodes: x,y,x,y,x,y,x,...')),
                ('polygon_x', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), help_text='x coordinates of polygon nodes', size=None)),
                ('polygon_y', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), help_text='y coordinates of polygon nodes', size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Unlabeled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True, help_text='date of observations')),
                ('night', models.IntegerField(db_index=True, default=0, help_text='night of observation (YYYYMMDD, UT)')),
                ('filearchivepath', models.TextField(default='', help_text='thumbnail filename and archive path')),
                ('moonalt', models.FloatField(db_index=True, default=-99, help_text='altitude of the Moon')),
                ('sunalt', models.FloatField(db_index=True, default=-99, help_text='altitude of the Sun')),
                ('moonphase', models.FloatField(db_index=True, default=-1, help_text='illumination of the Moon')),
                ('srcdens', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='source density per subregion'), null=True, size=None)),
                ('bkgmean', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background mean value per subregion'), null=True, size=None)),
                ('bkgmedian', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background median value per subregion'), null=True, size=None)),
                ('bkgstd', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=-1, help_text='background standard deviation per subregion'), null=True, size=None)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='time of ingestion')),
            ],
            options={
                'get_latest_by': 'date',
            },
        ),
    ]
